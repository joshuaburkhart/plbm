% Computes the MSE for the model (eq 2)%	A = Xb + ?function MSE=IGfunct(parameter)global initVh initVp n p q X tau1 tau2d1=abs(parameter(1));d2=abs(parameter(2));%fid=fopen('m-out.csv','a');%fprintf(fid,'d1: %f d2: %f\n',d1,d2);%fclose(fid);%%fid=fopen('m-out.csv','a');%for i=1:size(Bt,1)%  fprintf(fid,'%f ',Bt(i,:));%  fprintf(fid,'\n');%end%fclose(fid);% calculate the covariance matrices under the OU process (eq A.1)A=(d1.^tau1);B=(2*initVh);C=(d1.^(B));D=(1-C);E=((A).*(D));d1sq=d1^2;omd1=1-d1sq;Vh=E./(omd1);A=(d2.^tau2);B=(2*initVp);C=(d2.^(B));D=(1-C);E=((A).*(D));d2sq=(d2^2);omd2=(1-d2sq);Vp=E./(omd2);Vh_ref=(d1.^tau1).*(1-d1.^(2*initVh))./(1-d1^2);Vp_ref=(d2.^tau2).*(1-d2.^(2*initVp))./(1-d2^2);% standardize the covariance matrices to have determinant = 1 (this avoids% numerical issues of determinants going to infinity or zero)[L,U] = lu(Vh);s =  det(L);    % This is always +1 or -1 diag_u = diag(U);prod_diag_u = prod(diag_u);s_x_prod_diag_u = s*prod_diag_u;detVh = det(Vh);[L,U] = lu(Vp);s =  det(L);        % This is always +1 or -1 diag_u = diag(U);prod_diag_u = prod(diag_u);s_x_prod_diag_u = s*prod_diag_u;detVp = det(Vp);Vh=Vh./detVh^(1/p);Vp=Vp./detVp^(1/q);V=kron(Vp,Vh);size(Vp);size(Vh);size(V);size(eye(n));invV=V\eye(n);% compute the phylogenetic mean (eq. A.2)U=ones(length(X),1);At=U';Bt=At*invV;Ct=Bt*U;Dt=Bt*X;b=(Ct)\(Dt);% compute the phylogenetic MSE (eq. A.2)H=X-b;MSE=(H'*invV*H)/(n-1);